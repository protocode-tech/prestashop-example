#!/usr/bin/env bash

PRINT_HELP() {
    echo "Usage: $0 [options]"
    echo ""
    echo "Options :"
    echo "  -h, --help      Display this help"
    echo "  -f, --folder    Destination folder in dev folder"
}

while [[ $# -gt 0 ]] 
do
    key="$1"
    value="$2"
    case $key in
        -h|--help)
            PRINT_HELP
            exit 0
        ;;
        -f|--folder)
            FOLDER=${value:-"dev/dist"}
            shift # past argument
            shift # past value
        ;;
        ?)
        echo "Unknown option : $1"
            PRINT_HELP
            exit 1
        ;;
    esac
done

FOLDER=${FOLDER:-"dev/dist"}

if [ ! -f ./$FOLDER/dump.sql.tar.zst ]; then
    echo "No dump found. Skipping.";
    exit 0;
fi

# Wait for mysql to be up
if ! dev/bin/mysqladmin 'ping 2>/dev/null'; then
    echo "Waiting for mysql to be up..."
    sleep 1
    while ! dev/bin/mysqladmin 'ping 2>/dev/null'; do 
        sleep 1
    done
fi

# Wait for mysql to handle connection
if ! dev/bin/mysql '-e "" 2>/dev/null'; then
    echo "Waiting for mysql to handle connection..."
    sleep 1
    while ! dev/bin/mysql '-e "" 2>/dev/null'; do 
        sleep 1
    done
fi

# Copy dump from host to app container
echo "Copying dump from host to container..."
docker-compose cp ./$FOLDER/dump.sql.tar.zst app:/tmp/dump.sql.tar.zst

# Uncompressing dump
echo "Uncompressing dump..."
dev/bin/tar --use-compress-program=unzstd -xf /tmp/dump.sql.tar.zst
docker-compose exec app rm /tmp/dump.sql.tar.zst

# Replace url placeholder in database by current url
echo "Updating url in dump..."
APP_URL=$(docker-compose exec app bash -c 'echo $VIRTUAL_HOST')
docker-compose exec app sed -i s/__VIRTUAL_HOST__/$APP_URL/g /tmp/dump.sql

# Import dump in database
echo "Importing dump..."
dev/bin/mysql "< /tmp/dump.sql 2>/dev/null"
docker-compose exec app rm /tmp/dump.sql
