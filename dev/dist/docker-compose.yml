version: '3'
services:
    app:
        image: 'prestashop/prestashop:8.0.1'
        environment:
            VIRTUAL_HOST: app-${COMPOSE_PROJECT_NAME}.local
            PS_DEV_MODE: '1'
            PS_INSTALL_AUTO: '0'
            PS_ENABLE_SSL: '1'
            DB_SERVER: $DB_HOST
            DB_NAME: $DB_DATABASE
            DB_USER: $DB_USER
            DB_PASSWD: $DB_PASSWORD
            DB_PREFIX: $DB_PREFIX
            UID: $UID
            GID: $GID
        volumes:
            - './dev/docker-init-scripts:/tmp/init-scripts'
            - './:/var/www/html'
        links:
            - database
            - mailhog
        networks:
            - protocode_default
        restart: unless-stopped
    # s3fs:
    #     image: efrecon/s3fs:1.91
    #     restart: unless-stopped
    #     environment:
    #         AWS_S3_BUCKET: protoshop
    #         AWS_S3_ACCESS_KEY_ID: SCW7RCZSBKC5EHJ3EKMP
    #         AWS_S3_SECRET_ACCESS_KEY: 4f314ee1-347c-40c1-b252-47ee6a193c90
    #         AWS_S3_URL: https://s3.fr-par.scw.cloud
    #         S3FS_ARGS: "use_path_request_style,endpoint=fr-par,parallel_count=15,multipart_size=128,nocopyapi,nonempty"
    #         UID: $UID
    #         GID: $GID
    #     volumes:
    #         - ./img:/opt/s3fs/bucket:rshared
    #     cap_add: [SYS_ADMIN]
    #     security_opt: ['apparmor:unconfined']
    #     devices: [/dev/fuse]
    database:
        image: 'mysql:5.7'
        environment:
            MYSQL_DATABASE: $DB_DATABASE
            MYSQL_USER: $DB_USER
            MYSQL_PASSWORD: $DB_PASSWORD
            MYSQL_ROOT_PASSWORD: $DB_PASSWORD
        volumes:
            - db-data:/var/lib/mysql
        networks:
            - protocode_default
        restart: unless-stopped
    phpmyadmin:
        image: 'phpmyadmin:5.0'
        environment:
            VIRTUAL_HOST: phpmyadmin-${COMPOSE_PROJECT_NAME}.local
            MYSQL_USERNAME: $DB_USER
            MYSQL_PASSWORD: $DB_PASSWORD
            PMA_USERNAME: $DB_USER
            PMA_PASSWORD: $DB_PASSWORD
            PMA_HOSTS: $DB_HOST
        links:
            - database
        networks:
            - protocode_default
        restart: unless-stopped
    mailhog:
        image: mailhog/mailhog
        environment:
            VIRTUAL_HOST: mailhog-${COMPOSE_PROJECT_NAME}.local
            VIRTUAL_PORT: '8025'
        networks:
            - protocode_default
        restart: unless-stopped
volumes:
    db-data:
networks:
    protocode_default:
        external: true
